plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.12'
	id 'io.spring.dependency-management' version '1.1.5'

}

group = 'example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

test {
 testLogging {
        events "passed", "skipped", "failed" //, "standardOut", "standardError"

        showExceptions true 
        exceptionFormat "full"
        showCauses true
        showStackTraces true

        // Change to `true` for more verbose test output
        showStandardStreams = false 
    }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
  
    implementation 'org.springframework.data:spring-data-jdbc'
    implementation 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-security'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}



tasks.withType(Javadoc) {
    // Charset UTF-8 para suportar caracteres especiais nos comentários
    options.encoding = 'UTF-8'

    // Incluir todos os arquivos .java nas pastas de origem
    source = sourceSets.main.allJava

    // Adicionando links para a documentação do JDK
    options.links("https://docs.oracle.com/en/java/javase/21/docs/api/")

    // Outras opções, se necessário
    options.memberLevel = JavadocMemberLevel.PRIVATE // ou PROTECTED para incluir membros protegidos
    options.windowTitle = 'Meu Projeto Javadoc'
}
